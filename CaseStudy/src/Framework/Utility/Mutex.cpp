//==============================================================================
//
// Mutexクラス [Mutex.cpp]
// Created : Shimizu Shoji
//
//==============================================================================
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// include
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#include "Mutex.h"


//==============================================================================
// class implementation
//==============================================================================
//------------------------------------------------
// ctor
//------------------------------------------------
liza::Mutex::Mutex( const std::string& handleName ) : hMutex_( nullptr ) {
	hMutex_ = OpenMutex( MUTEX_ALL_ACCESS, FALSE, handleName.c_str() );
}


//------------------------------------------------
// dtor
//------------------------------------------------
liza::Mutex::~Mutex() {
	Release();
}


//------------------------------------------------
// mutexのハンドルを解放する(主導)
//------------------------------------------------
void liza::Mutex::Release( void ) {
	ReleaseMutex( hMutex_ );
}


//------------------------------------------------
// Lock
//------------------------------------------------
void liza::Mutex::Lock( void ) {
	WaitForSingleObject( hMutex_, INFINITE );
}