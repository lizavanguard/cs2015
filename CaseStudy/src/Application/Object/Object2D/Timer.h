//******************************************************************************
//
// タイマー処理  [timer.h]
// Author  :  SHOHEI MATSUMOTO
// 更新日  :  2015/06/12
//
//******************************************************************************
//******************************************************************************
// インクルードガード
//******************************************************************************
#ifndef _TIMER_H_
#define _TIMER_H_

//******************************************************************************
// インクルードファイル
//******************************************************************************
#include "NumberObject.h"

//******************************************************************************
// ライブラリのリンク
//******************************************************************************


//******************************************************************************
// マクロ定義
//******************************************************************************
#define TIMER_COUNT (99)
#define MAX_FIGURE (2)
#define FIGURE_DEFINE (10)

//******************************************************************************
// 構造体定義
//******************************************************************************


//******************************************************************************
// クラス定義
//******************************************************************************
class NumberObject;
class Timer{
  public:
  // modemanaged


  // funciton ==================================
public:
  // ctor
  Timer(const D3DXVECTOR3 &pos, const float &rot, const D3DXVECTOR2 &size, NUMBER_TYPE type);
  // dtor
  virtual ~Timer();
  // update
  void Update();
  // draw
  void Draw(void);
  // reset
  void Reset(void);


protected:

private:


  // parameter =================================
public:

protected:

private:
  int count_;
  int value_;
  NumberObject **p_numberObject_;
};

//******************************************************************************
// プロトタイプ宣言
//******************************************************************************



#endif
// EOF